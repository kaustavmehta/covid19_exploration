) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+35, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("USA"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data <- data[-1]
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,80) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+35, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("USA"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data <- data[-1]
data <- data[-1]
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,80) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+35, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("USA"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,80) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+35, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("USA"))
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,80) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+25, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,80) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+30, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,80) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+30, label=variable), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,50) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+30, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-5,150) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+30, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-10,150) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+30, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-10,150) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+50, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value), title = "India") +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-10,150) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+50, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
plot(generate_circleBarPlot("IND"))
ggsave("India_static.png", scale = 2, plot=plot(generate_circleBarPlot("IND")))
generate_circleBarPlot <- function(ISO_code){
country <- extract_country_data(ISO_code)
data <- extract_static(country)
data$date <- NULL
data$population <- NULL
data <- data[-(2:nrow(data)),]
data <- melt(data)
data <- cbind(id = seq(1:nrow(data)), data)
label_data <- data
# calculate the ANGLE of the labels
number_of_bar <- nrow(label_data)
angle <-  90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# ----- ------------------------------------------- ---- #
# Start the plot
p <- ggplot(data, aes(x=as.numeric(id), y=value)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-10,150) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(data=label_data, aes(x=id, y=value+15, label=value, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
geom_text(data=label_data, aes(x=id, y=value+40, label=variable, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
}
ggsave("India_static.png", scale = 2, plot=plot(generate_circleBarPlot("IND")))
ggsave("India_static.png", scale = 2, plot=plot(generate_circleBarPlot("IND")))
{
ggsave("USA_static.png", scale = 2, plot=plot(generate_circleBarPlot("USA")))
ggsave("Brazil_static.png", scale = 2, plot=plot(generate_circleBarPlot("BRA")))
ggsave("Russia_static.png", scale = 2, plot=plot(generate_circleBarPlot("RUS")))
ggsave("India_static.png", scale = 2, plot=plot(generate_circleBarPlot("IND")))
ggsave("UK_static.png", scale = 2, plot=plot(generate_circleBarPlot("GBR")))
ggsave("Spain_static.png", scale = 2, plot=plot(generate_circleBarPlot("ESP")))
ggsave("Italy_static.png", scale = 2, plot=plot(generate_circleBarPlot("ITA")))
ggsave("Peru_static.png", scale = 2, plot=plot(generate_circleBarPlot("PER")))
ggsave("Germany_static.png", scale = 2, plot=plot(generate_circleBarPlot("DEU")))
ggsave("Iran_static.png", scale = 2, plot=plot(generate_circleBarPlot("IRN")))
ggsave("South_Korea_static.png", scale = 2, plot=plot(generate_circleBarPlot("KOR")))
ggsave("China_static.png", scale = 2, plot=plot(generate_circleBarPlot("CHN")))
ggsave("South_Africa_static.png", scale = 2, plot=plot(generate_circleBarPlot("ZAF")))
ggsave("Vietnam_static.png", scale = 2, plot=plot(generate_circleBarPlot("VNM")))
ggsave("France_static.png", scale = 2, plot=plot(generate_circleBarPlot("FRA")))
ggsave("New_Zealand_static.png", scale = 2, plot=plot(generate_circleBarPlot("NZL")))
ggsave("Australia_static.png", scale = 2, plot=plot(generate_circleBarPlot("AUS")))
ggsave("Bangladesh_static.png", scale = 2, plot=plot(generate_circleBarPlot("BGD")))
ggsave("Pakistan_static.png", scale = 2, plot=plot(generate_circleBarPlot("PAK")))
ggsave("Israel_static.png", scale = 2, plot=plot(generate_circleBarPlot("ISR")))
ggsave("Saudi_Arabia_static.png", scale = 2, plot=plot(generate_circleBarPlot("SAU")))
ggsave("Sweden_static.png", scale = 2, plot=plot(generate_circleBarPlot("SWE")))
ggsave("Thailand_static.png", scale = 2, plot=plot(generate_circleBarPlot("THA")))
ggsave("Ghana_static.png", scale = 2, plot=plot(generate_circleBarPlot("GHA")))
ggsave("Libya_static.png", scale = 2, plot=plot(generate_circleBarPlot("LBY")))
ggsave("Iraq_static.png", scale = 2, plot=plot(generate_circleBarPlot("IRQ")))
ggsave("Turkey_static.png", scale = 2, plot=plot(generate_circleBarPlot("TUR")))
ggsave("Syria_static.png", scale = 2, plot=plot(generate_circleBarPlot("SYR")))
ggsave("Somalia_static.png", scale = 2, plot=plot(generate_circleBarPlot("SOM")))
ggsave("Afghanistan_static.png", scale = 2, plot=plot(generate_circleBarPlot("AFG")))
ggsave("Yemen_static.png", scale = 2, plot=plot(generate_circleBarPlot("YEM")))
}
ggsave("Syria_static.png", scale = 2, plot=plot(generate_circleBarPlot("SYR")))
